<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="dasbhoard1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>